pipeline AirportsDataPipeline {
  AirportsDataExtractor
    -> AirportsDataTextFileInterpreter
    -> AirportsDataCSVInterpreter
    -> AirportsDataTableInterpreter
    -> AirportsDataLoader;



  block AirportsDataExtractor oftype HttpExtractor {

    // Here is the link of source file, where the pipeline will download the data
    url: "https://opendata.rhein-kreis-neuss.de/api/explore/v2.1/catalog/datasets/rhein-kreis-neuss-flughafen-weltweit/exports/csv?lang=en&timezone=Europe%2FBerlin&use_labels=true&delimiter=%3B";
  }

  // By this method the pipeline will interpet the file as text type
  block AirportsDataTextFileInterpreter oftype TextFileInterpreter { }

  // Now we will convert text type to csv type
  block AirportsDataCSVInterpreter oftype CSVInterpreter {
    delimiter: ";"; // here ";" means that by using ; columns are separated
  }


 // here is the column names and values of first row
//Lfd. Nummer;Name des Flughafens;Ort;Land;IATA;ICAO;Latitude;Longitude;Altitude;Zeitzone;DST;Zeitzonen-Datenbank;geo_punkt
//8703;Barberton Airport;Barberton;South Africa;0;FABR;-25.716869;30.97518;686;2.0;U;Africa/Johannesburg;-25.716869, 30.97518
//here IATA is 0, but is some rows it is 3 character values, so it will be text type


//This is the instraction part for the exercise
//Do not save the following columns: Zeitzone, DST, Zeitzonen-Datenbank, geo_punkt
//Assign fitting built-in SQLite types (e.g., BIGINT, TEXT or FLOAT) to all other column


// assinging every columns with the type and not mentioning the 4 columns 
  block AirportsDataTableInterpreter oftype TableInterpreter {
    header: true;
    columns: [
      "Lfd. Nummer" oftype integer,
      "Name des Flughafens" oftype text,
      "Ort" oftype text,
      "Land" oftype text,
      "IATA" oftype text,
      "ICAO" oftype text,
      "Latitude" oftype decimal,
      "Longitude" oftype decimal,
      "Altitude" oftype integer
    ];
  }

  // saving table and .sqlite file
  block AirportsDataLoader oftype SQLiteLoader {
    table: "airports";
    file: "./airports.sqlite";
  }

  // 16. Congratulations!
  // You can now use the sink for your data analysis, app, 
  // or whatever you want to do with the cleaned data.  
}